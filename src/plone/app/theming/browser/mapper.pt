<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
    lang="en"
    metal:use-macro="context/prefs_main_template/macros/master"
    i18n:domain="plone">

<head>
<metal:block fill-slot="top_slot">

<tal:defines define="dummy python:request.set('disable_border',1);
                     disable_column_one python:request.set('disable_plone.leftcolumn',1);
                     disable_column_two python:request.set('disable_plone.rightcolumn',1);"/>

<!-- ACE editor -->
<script
    type="text/javascript"
    charset="utf-8"
    tal:attributes="src string:${context/absolute_url}/++resource++plone.app.theming.editor/ace/ace.js"
    ></script>

<!-- Theme -->
<script
    type="text/javascript"
    charset="utf-8"
    tal:attributes="src string:${context/absolute_url}/++resource++plone.app.theming.editor/ace/theme-textmate.js"
    ></script>

<!-- Syntax highlighting -->
<script
    type="text/javascript"
    charset="utf-8"
    tal:attributes="src string:${context/absolute_url}/++resource++plone.app.theming.editor/ace/mode-xml.js"
    ></script>
<script
    type="text/javascript"
    charset="utf-8"
    tal:attributes="src string:${context/absolute_url}/++resource++plone.app.theming.editor/ace/mode-html.js"
    ></script>


<!-- Mapper tools -->
<script
    type="text/javascript"
    charset="utf-8"
    tal:attributes="src string:${context/absolute_url}/++resource++plone.app.theming.editor/mapper.js"
    ></script>


<!-- Styling for this page -->
<link
    rel="stylesheet"
    type="text/css"
    tal:attributes="href string:${context/absolute_url}/++resource++plone.app.theming.editor/mapper.css"
    />

<script type="text/javascript" tal:content="view/jsVariables"></script>

<script type="text/javascript">
    
    jQuery(function($) {
        
        $(document).ready(function() {
            
            // TODO:
            //      - Full screen editing mode for rules + theme resources
            //      - Allow editing + saving of CSS, JS and HTML files (source view)
            //      - On insert rule, insert after current tag instead of near end of document

            // Longer term:
            //      - Working copy
            //      - Integrate file manager with mapper

            var WINDOW_BASE = window.location.protocol + '//' + window.location.host;

            // Editor management

            function initEditor(element, mode, data, readonly) {
                var editor = ace.edit(element);
                editor.setTheme("ace/theme/textmate");
                editor.getSession().setTabSize(4);
                editor.getSession().setUseSoftTabs(true);
                editor.getSession().setUseWrapMode(false);
                editor.getSession().setMode(mode);
                editor.renderer.setShowGutter(false);
                editor.setShowPrintMargin(false);
                editor.setReadOnly(readonly);

                editor.getSession().setValue(data);
                editor.navigateTo(0, 0);

                return editor;
            }

            var XMLMode = require("ace/mode/xml").Mode;
            var HTMLMode = require("ace/mode/html").Mode;

            // Rules editor

            var editor = initEditor('editor', new XMLMode(), $("#file-contents").text(), false);

            // Source editors
            var contentSource = initEditor('content-source', new HTMLMode(), "", true);
            var themeSource = initEditor('theme-source',     new HTMLMode(), "", true);
            var previewSource = initEditor('preview-source', new HTMLMode(), "", true);

            // New rule wizard

            var triggers = $("#new-rule").overlay({
                closeOnClick: false,
                onBeforeClose: function() {
                    if(ruleBuilder.active && $("#new-rule-step-2").is(":visible")) {
                        ruleBuilder.end();
                        $(".hideDuringWizard").fadeIn();    
                    }
                }
            });
            var overlay = $(triggers[0]).data('overlay');

            function updateRule(ruleBuilder) {
                $("#new-rule-output").text(ruleBuilder.buildRule(
                    $('#new-rule-content-children').is(':checked'), 
                    $('#new-rule-theme-children').is(':checked')
                ));   
            }

            var ruleBuilder = new RuleBuilder(function(ruleBuilder) {
                $(".wizard-text").css('display', 'none');
                $.mask.close();

                if(ruleBuilder.currentScope == 'content') {
                    if(overlay.isOpened()) {
                        overlay.close();
                    }

                    $("#new-rule-text-select-content").css('display', 'inline-block');
                    $("#view-content-preview").click();
                    $("#content-split, .wizard-text").expose();
                
                } else if(ruleBuilder.currentScope == 'theme') {
                    if(overlay.isOpened()) {
                        overlay.close();
                    }

                    $("#new-rule-text-select-theme").css('display', 'inline-block');
                    $("#view-theme-preview").click();
                    $("#theme-split, .wizard-text").expose();

                } else if(ruleBuilder.rule != null && ruleBuilder.currentScope == null) {
                    $("#new-rule-step-1").hide();
                    $("#new-rule-step-2").show();
                    updateRule(ruleBuilder);

                    if(!overlay.isOpened()) {
                        overlay.load();    
                    }

                } else { // end

                    if(overlay.isOpened()) {
                        overlay.close();
                    }

                    $("#new-rule-step-1").show();
                    $("#new-rule-step-2").hide();


                }
                
            });

            $(".rule-modifier").change(function() {
                updateRule(ruleBuilder);
            });

            $("#new-rule-step-1 button.next").click(function() {
                var ruleType = $("input[name='new-rule-type']:checked").val();
                ruleBuilder.start(ruleType);

                $(".hideDuringWizard").fadeOut('slow');
            });

            $("#new-rule-step-2 button.insert").click(function() {
                
                var rule = $("#new-rule-output").text();

                function findStartTag(backwards) {
                    editor.find("<\\w+", {
                        backwards: backwards,
                        wrap: false,
                        wholeWord: false,
                        regExp: true
                    });
                }

                function indent(string, amount) {
                    var padding = '';
                    for(var i = 0; i < amount; ++i) {
                        padding += ' ';
                    }
                    return padding + string.replace(/\n/g, '\n' + padding) + '\n\n';
                }

                // Go to the next opening tag - we want to insert before this
                findStartTag(false);
                if(editor.getCursorPosition().row <= 1) {
                    // Probably the opening rules tag
                    findStartTag(false);
                }

                var selectionText = editor.getSession().getTextRange(editor.getSelectionRange());

                // If we didn't find anything, look for the end of the current tag
                if(selectionText == "") {

                    editor.find("(/>|<" + "/)", {
                        backwards: false,
                        wrap: false,
                        wholeWord: false,
                        regExp: true
                    });

                    var selectionText = editor.getSession().getTextRange(editor.getSelectionRange());
                    if(selectionText == "") {
                        // Still nothing? Go to the end
                        editor.navigateFileEnd();
                    } else {
                        // Go one past the end tag, but first figure out how far we should i
                        editor.navigateDown();
                    }

                } 

                var indentation = editor.getSelectionRange().start.column;

                var cursorPosition = editor.getCursorPosition();
                var newlines = rule.match(/\n/g);
                var rows = 0;
                if(newlines != null) {
                    rows = newlines.length;
                }

                editor.navigateTo(cursorPosition.row, 0);
                editor.insert(indent(rule, indentation));
                editor.navigateTo(cursorPosition.row, 0);
                editor.getSelection().selectTo(cursorPosition.row + rows + 1, 0);
                
                overlay.close();
            });

            // Frame setup - the apparent double loading is needed for this
            // to work reliably in multiple browsers
            
            $("#content-frame").ready(function() {
                var frameHighlighter = new FrameHighlighter("#content-frame", 'content', ruleBuilder);
                var linkManager = new LinkManager("#content-frame", 'off',  WINDOW_BASE, THEME_BASE_URL);
                function setup() {
                    frameHighlighter.setupElements();
                    linkManager.setupLinks();
                    linkManager.setupForms();
                }
                setup();
                $("#content-frame").load(setup);
            });

            $("#theme-frame").ready(function() {
                var frameHighlighter = new FrameHighlighter("#theme-frame", 'theme', ruleBuilder);
                function setup() {
                    frameHighlighter.setupElements();
                }
                setup();
                $("#theme-frame").load(setup);
            });

            $("#preview-frame").ready(function() {
                var linkManager = new LinkManager("#preview-frame", 'apply', WINDOW_BASE, THEME_BASE_URL);
                function setup() {
                    linkManager.setupLinks();
                    linkManager.setupForms();
                }
                setup();
                $("#preview-frame").load(setup);
            });

            // Set up theme file selector

            $("#file-selector").change(function() {
                $("#view-theme-preview").click();

                var option = $(":selected", this);
                var path = $(option).attr('data-path');
                var fetch = THEME_BASE_URL + "/@@theming-controlpanel-mapper-getframe?path=" + path + "&amp;theme=off";
                $("#theme-frame").attr('src', fetch);
                return false;
            });

            // Set up save rules button

            $("#save-rules").click(function() {
                
                var data = editor.getSession().getValue();
                $("#file-contents").text(data);

                $.ajax({
                    url: THEME_BASE_URL + '/@@theming-controlpanel-mapper-save',
                    data: {value: data},
                    type: 'POST',
                    success: function(){
                        $('#preview-frame').attr("src", $('#preview-frame').attr("src"));
                    }
                });

            });

            // Set up the preview editors
            $("#view-preview-preview").change(function() {
                $("#preview-frame").show();
                $("#preview-source").hide();
            });
            $("#view-preview-preview").click();
            $("#view-preview-preview").click(function() { $(this).change(); });

            $("#view-preview-source").change(function() {
                var html = $("#preview-frame").contents().find(":root").html();
                previewSource.getSession().setValue("\n<" + "html>" + html + '\n<' + '/html>');
                $("#preview-frame").hide();
                $("#preview-source").show();
                previewSource.resize();
            });
            $("#view-preview-source").click(function() { $(this).change(); });

            $("#view-content-preview").change(function() {
                $("#content-frame").show();
                $("#content-source").hide();
            });
            $("#view-content-preview").click();
            $("#view-content-preview").click(function() { $(this).change(); });

            $("#view-content-source").change(function() {
                var html = $("#content-frame").contents().find(":root").html();
                contentSource.getSession().setValue("<" + "html>\n" + html + '\n<' + '/html>');
                $("#content-frame").hide();
                $("#content-source").show();
                contentSource.resize();
            });
            $("#view-content-source").click(function() { $(this).change(); });

            $("#view-theme-preview").change(function() {
                $("#theme-frame").show();
                $("#theme-source").hide();
            });
            $("#view-theme-preview").click();
            $("#view-theme-preview").click(function() { $(this).change(); });

            $("#view-theme-source").change(function() {
                var html = $("#theme-frame").contents().find(":root").html();
                themeSource.getSession().setValue("<" + "html>\n" + html + '\n<' + '/html>');
                $("#theme-frame").hide();
                $("#theme-source").show();
                themeSource.resize();
            });
            $("#view-theme-source").click(function() { $(this).change(); });

        });

    });

</script>

</metal:block>
</head>

<body>
<div metal:fill-slot="prefs_configlet_main">

    <h1 class="documentFirstHeading"
        i18n:translate="heading_theme_mapper">Map theme: 
        <span i18n:name="name" tal:content="view/title">name</span></h1>
    
    <a href=""
        class="link-parent"
        tal:attributes="href string:${portal_url}/@@theming-controlpanel"
        i18n:translate="label_up_to_theming_controlpanel">
            Up to Diazo theme control panel
    </a>

    |

    <a class="link-parent"
       tal:attributes="href string:${view/portalUrl}/++theme++${view/name}/@@theming-controlpanel-filemanager"
       i18n:translate="label_up_to_theming_filemanager">
            File manager
    </a>    

    <p i18n:translate="help_theme_mapper">
        Below, you will find four panels: The Diazo rules, a preview of the themed
        site using these rules, the unthemed content and the raw theme.
        You can navigate the content, theme or preview, and change to
        a different theme file if you wish. If you edit the rules and click
        <strong>Save</strong>, your changes will be saved
        and the preview updated to reflect the latest rules.
    </p>

    <div class="row">
        <div id="editor-area" class="cell width-full position-0">

            <h2 i18n:translate="heading_rules">Rules</h2>

            <p class="discreet" i18n:translate="help_split_content">
                The rules that apply the theme to the content
            </p>

            <div id="mapper-toolbar">
                <button
                    id="save-rules"
                    name="form.button.Save"
                    class="allowMultiSubmit"
                    i18n:translate=""
                    >Save</button>
                <button
                    id="new-rule"
                    name="form.button.BuildRule"
                    class="allowMultiSubmit"
                    rel="#new-rule-wizard"
                    i18n:translate=""
                    >New rule</button>
                
                <span class="wizard-text" id="new-rule-text-select-content" i18n:translate="theming_mapper_select_content">
                    Select an element in the content panel.
                </span>
                <span class="wizard-text" id="new-rule-text-select-theme" i18n:translate="theming_mapper_select_theme">
                    Select an element in the theme panel.
                </span>
            
            </div>

            <pre class="hideDuringWizard" id="editor"></pre>
            <textarea id="file-contents" class="hiddenStructure" name="rules"
                tal:content="view/rules"></textarea>

        </div>
    </div>

    <div class="row hideDuringWizard">
        <div id="preview" class="cell width-full position-0">
            <h2 i18n:translate="heading_merged">Preview</h2>

            <div class="panel-toolbar">
                <input type="radio" name="view-preview" id="view-preview-preview" value="preview" checked="checked" />
                <label for="view-preview-preview" i18n:translate="">Preview</label>

                <input type="radio" name="view-preview" id="view-preview-source" value="source" />
                <label for="view-preview-source" i18n:translate="">Source</label>
            </div>
            
            <p class="discreet" i18n:translate="help_split_merged">
                The result of applying the rules can be seen below
            </p>

            <iframe id="preview-frame"
                tal:attributes="src string:${view/themeBaseUrl}/@@theming-controlpanel-mapper-getframe?path=/&amp;theme=apply"></iframe>
            <pre class="source-editor" id="preview-source"></pre>

        </div>
    </div>

    <div id="splitview" class="row">
        <div id="content-split" class="cell width-1:2 position-0">
            <h2 i18n:translate="heading_content">Content</h2>

            <div class="panel-toolbar">
                <input type="radio" name="view-content" id="view-content-preview" value="preview" checked="checked" />
                <label for="view-content-preview" i18n:translate="">Preview</label>

                <input type="radio" name="view-content" id="view-content-source" value="source" />
                <label for="view-content-source" i18n:translate="">Source</label>
            </div>

             <p class="discreet" i18n:translate="help_split_content">
                The raw content
            </p>

            <iframe id="content-frame"
                tal:attributes="src string:${view/themeBaseUrl}/@@theming-controlpanel-mapper-getframe?path=/&amp;theme=off"></iframe>
            <pre class="source-editor" id="content-source"></pre>

        </div>
        <div id="theme-split" class="cell width-1:2 position-1:2">
            <h2 i18n:translate="heading_theme">Theme</h2>

            <div class="panel-toolbar">
                <select size="1" name="file-selector" id="file-selector">
                    <option
                        tal:repeat="f view/themeFiles"
                        tal:attributes="value f/path;
                                        data-path f/path;
                                        data-extension f/extension"
                        tal:content="f/path"
                        />
                </select>

                <input type="radio" name="view-theme" id="view-theme-preview" value="preview" checked="checked" />
                <label for="view-theme-preview" i18n:translate="">Preview</label>

                <input type="radio" name="view-theme" id="view-theme-source" value="source" />
                <label for="view-theme-source" i18n:translate="">Source</label>

            </div>

            <p class="discreet" i18n:translate="help_split_theme">
                The pristine theme
            </p>

            <iframe id="theme-frame"
                tal:attributes="src string:${view/themeBaseUrl}/@@theming-controlpanel-mapper-getframe?path=/${view/themeBasePathEncoded}/${view/defaultThemeFile}&amp;theme=off"></iframe>
            <pre class="source-editor" id="theme-source"></pre>

        </div>
    </div>

    <!-- Wizard overlay -->
    <div id="new-rule-wizard" class="overlay">
        <div class="close">
            <span i18n:translate="">Close</span>
        </div>
        <div class="pb-ajax">
            <div class="new-rule">
                <h2 i18n:translate="theming_mapper_heading_newrule">New rule</h2>

                <div id="new-rule-step-1">
                    <p i18n:translate="theming_mapper_wizard_step1">
                        Choose the operation you would like to perform:
                    </p>

                    <form>
                        <div id="new-rule-type-panel">
                            <div>
                                <input type="radio" name="new-rule-type" value="replace" id="new-rule-replace" checked="checked" />
                                <label for="new-rule-replace" i18n:translate="theming_mapping_wizard_replace">
                                    <strong>Replace</strong> an element of the theme with an element from the content
                                </label>
                            </div>
                            <div>
                                <input type="radio" name="new-rule-type" value="before" id="new-rule-before" />
                                <label for="new-rule-before" i18n:translate="theming_mapping_wizard_before">
                                    Insert an element from the content <strong>before</strong> an element in the theme
                                </label>
                            </div>
                            <div>
                                <input type="radio" name="new-rule-type" value="after" id="new-rule-after" />
                                <label for="new-rule-after" i18n:translate="theming_mapping_wizard_after">
                                    Insert an element from the content <strong>after</strong> an element in the theme
                                </label>
                            </div>
                            <div>
                                <input type="radio" name="new-rule-type" value="drop:content" id="new-rule-drop-content" />
                                <label for="new-rule-drop-content" i18n:translate="theming_mapping_wizard_drop_content">
                                    <strong>Drop</strong> an element in the <strong>content</strong>
                                </label>
                            </div>
                            <div>
                                <input type="radio" name="new-rule-type" value="drop:theme" id="new-rule-drop-theme" />
                                <label for="new-rule-drop-theme" i18n:translate="theming_mapping_wizard_drop_theme">
                                    <strong>Drop</strong> an element in the <strong>theme</strong>
                                </label>
                            </div>
                        </div>
                    </form>

                    <div class="new-rule-actions">
                        <button type="button" class="next">Next</button>
                        <button type="button" class="close">Cancel</button>
                    </div>

                </div>
                <div id="new-rule-step-2" style="display:none">
                    <p i18n:translate="theming_mapper_wizard_step2">
                        The rule can be found below. Use the checkboxes
                        to further refine it.
                    </p>
                    <form>
                        <div id="new-rule-output-panel">
                            <textarea name="new-rule-output" id="new-rule-output"></textarea>
                        </div>
                        <div id="new-rule-selector-panel">
                            <div>
                                <input type="checkbox" class="rule-modifier" name="new-rule-content-children" value="replace" id="new-rule-content-children" />
                                <label for="new-rule-content-children" i18n:translate="">Use children of the content</label>
                            </div>
                            <div>
                                <input type="checkbox" class="rule-modifier" name="new-rule-theme-children" value="replace" id="new-rule-theme-children" />
                                <label for="new-rule-theme-children" i18n:translate="">Use children of the theme</label>
                            </div>
                        </div>
                        
                    </form>

                    <div class="new-rule-actions">
                        <button type="button" class="insert">Insert</button>
                        <button type="button" class="close">Close</button>
                    </div>
                </div>

                
            </div>
        </div>
    </div>

</div>
</body>
</html>
