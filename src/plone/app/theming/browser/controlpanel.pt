<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
    lang="en"
    metal:use-macro="context/prefs_main_template/macros/master"
    i18n:domain="plone">

<metal:block fill-slot="top_slot">

    <tal:defines tal:define="dummy python:request.set('disable_border',1);
                             disable_column_one python:request.set('disable_plone.leftcolumn',0);
                             disable_column_two python:request.set('disable_plone.rightcolumn',1);"/>

    <link
        rel="stylesheet"
        type="text/css"
        tal:attributes="href string:${context/portal_url}/++resource++plone.app.theming/controlpanel.css"
        />

<script type="text/javascript" charset="utf-8" tal:content="string:var OPEN_OVERLAY='${view/overlay}';;"></script>
<script type="text/javascript" charset="utf-8">

    jQuery(function($) {

        $().ready(function() {

            $('.previewImageContainer').click(function() {
                window.open($(this).attr("href"), "preview");
                return false;
            });

            // move to top so overlays work
            $(".overlay").appendTo("body");

            // Create/copy overlay
            $("#overlay-new-theme").overlay();
            $("#overlayTitleNewTheme").show();
            $("#overlayTitleCopyTheme").hide();

            $("#createButton").click(function() {
                $("#baseOn").val('template');
                $("#overlayTitleNewTheme").show();
                $("#overlayTitleCopyTheme").hide();
                $("#overlay-new-theme").data('overlay').load();
                return false;
            });

            $(".copyButton").click(function() {
                $("#baseOn").val($(this).attr('data-theme'));
                $("#overlayTitleNewTheme").hide();
                $("#overlayTitleCopyTheme span").html($(this).attr('data-title'));
                $("#overlayTitleCopyTheme").show();
                $("#overlay-new-theme").data('overlay').load();
                return false;
            });

            $("#overlay-new-theme input[name=form.button.Cancel]").click(function() {
                $("#overlay-new-theme").data('overlay').close();
                return false;
            });

            // Delete confirm overlay
            $("#overlay-delete-confirm").overlay();

            $(".deleteLink").click(function() {
                $("#deleteConfirmTheme").val($(this).attr('data-theme'));
                $("#overlayTitleDeleteConfirm span").html($(this).attr('data-title'));
                $("#overlay-delete-confirm").data('overlay').load();
                return false;
            });

            $("#overlay-delete-confirm input[name=form.button.Cancel]").click(function() {
                $("#overlay-delete-confirm").data('overlay').close();
                return false;
            });

            // Upload overlay
            $("#overlay-upload").overlay();

            $("#uploadButton").click(function() {
                $("#overlay-upload").data('overlay').load();
                return false;
            });

            $("#overlay-upload input[name=form.button.Cancel]").click(function() {
                $("#overlay-upload").data('overlay').close();
                return false;
            });

            // Open overlay if the window hash told us to
            if(OPEN_OVERLAY) {
                var triggeredOverlay = $("#overlay-" + OPEN_OVERLAY).data('overlay');
                if(triggeredOverlay) triggeredOverlay.load();
            }

        });

});

</script>


</metal:block>

<body>

<div metal:fill-slot="prefs_configlet_main" id="themeControlPanel">

    <h1 class="documentFirstHeading"
        i18n:translate="heading_theme_settings">Theme settings</h1>

    <a href=""
        class="link-parent"
        tal:attributes="href string:${portal_url}/plone_control_panel"
        i18n:translate="label_up_to_plone_setup">
            Up to Site Setup
    </a>

    <p i18n:translate="description_theme_settings">
        Use this control panel to import, enable or edit a Diazo theme.
    </p>

    <dl class="portalMessage info">
        <dt>info</dt>
        <dd i18n:translate="description_notheme_controlpanel">
            Please note that this control panel page will never be themed.
        </dd>
    </dl>

    <dl class="enableFormTabbing">
        <dt id="fieldsetlegend-basic" i18n:translate="">Themes</dt>
        <dd id="fieldset-basic">

            <p i18n:translate="description_basic_settings">
                Use the buttons to create or upload a new Diazo theme,
                or select an existing theme from a the list below.
            </p>

            <div class="formControls">
                <button
                    id="createButton"
                    class="standalone"
                    i18n:translate="">Create new</button>

                <button
                    id="uploadButton"
                    class="standalone"
                    i18n:translate="">Upload Zip file</button>
            </div>

            <div id="themesList">

                <h3 i18n:translate="">Available themes</h3>

                <div class="themeEntry"
                    tal:repeat="theme view/themeList"
                    tal:attributes="class python:theme['selected'] and 'themeEntry activeThemeEntry' or 'themeEntry'">

                    <div clas="themeEntryDetail">

                        <span class="themeEntryTitle">
                            <span tal:replace="theme/title">Title</span>
                            <span
                                tal:condition="theme/selected"
                                class="themeActive"
                                i18n:translate="">(active)</span>
                        </span>

                        <div class="themeEntryWrapper">

                            <a class="previewImageContainer"
                                title="Click to view a live preview. Forms will be disabled in the preview."
                                i18n:translate="title [tooltip_theme_preview]"
                                tal:attributes="href string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper-getframe?path=/&amp;theme=apply&amp;forms=disable&amp;links=replace&amp;title=Preview:+${theme/title}"
                                target="_new"
                                href="#">
                                <img
                                    tal:attributes="src theme/preview"
                                    />
                            </a>

                            <div class="themeDescription" tal:content="theme/description" />

                            <div class="themeEntryControls">

                                <form method="post" tal:attributes="action request/URL">
                                    <input tal:replace="structure context/@@authenticator/authenticator" />
                                    <input type="hidden" name="themeName" tal:attributes="value theme/name" />
                                    <button
                                        tal:condition="not:theme/selected"
                                        i18n:translate=""
                                        type="submit"
                                        name="form.button.Enable">Activate</button>
                                    <button
                                        tal:condition="theme/selected"
                                        i18n:translate=""
                                        type="submit"
                                        name="form.button.Disable">Deactivate</button>
                                </form>

                                <button class="copyButton" tal:attributes="data-theme theme/name; data-title theme/title" i18n:translate="">Copy</button>

                                <form method="get" target="_blank" tal:attributes="action string:${context/absolute_url}/++theme++${theme/name}/@@download-zip">
                                    <button i18n:translate="">Download</button>
                                </form>

                                <form method="get" tal:attributes="action string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-mapper">
                                    <button i18n:translate="">Map rules</button>
                                </form>

                                <form method="get" tal:condition="theme/editable" tal:attributes="action string:${context/portal_url}/++theme++${theme/name}/@@theming-controlpanel-filemanager">
                                    <button tal:condition="theme/editable" i18n:translate="">Manage Files</button>
                                </form>

                                <button
                                    tal:condition="not:theme/editable"
                                    disabled="disabled"
                                    title="Themes located on the filesystem are read-only. Click Copy to create an editable copy."
                                    i18n:translate=""
                                    i18n:attributes="title">Manage Files</button>


                                <a href="#" class="deleteLink"
                                    tal:condition="theme/editable"
                                    tal:attributes="data-theme theme/name; data-title theme/title" i18n:translate="">Delete</a>

                            </div>

                        </div>

                     </div>
                </div>

                <div class="visualClear"><!-- --></div>

            </div>

        </dd>

        <dt id="fieldsetlegend-advanced" i18n:translate="">Advanced settings</dt>
        <dd id="fieldset-advanced">

            <p i18n:translate="description_advanced">
               Use the fields below to configure the Diazo rules file and
               absolute path prefix, or to enable reading a theme from a
               remote server.
            </p>

            <form
                name="advanced"
                method="post"
                class="enableUnloadProtection"
                tal:attributes="action request/URL"
                tal:define="errors view/errors">

                <div
                    tal:define="error errors/rules | nothing;
                                rules python:request.get('rules', view.settings.rules)"
                    tal:attributes="class python:'field error' if error else 'field'">

                    <label for="rules" i18n:translate="label_rules">Rules file</label>
                    <div class="formHelp" i18n:translate="help_rules">
                        Enter a path or URL for the theme rules file.
                    </div>

                    <div tal:content="error" tal:condition="error" />

                    <input
                        name="rules"
                        id="rules"
                        type="text"
                        size="50"
                        tal:attributes="value rules"
                        />

                </div>

                <div
                    tal:define="error errors/absolutePrefix | nothing;
                                absolutePrefix python:request.get('absolutePrefix', view.settings.absolutePrefix)"
                    tal:attributes="class python:'field error' if error else 'field'">

                    <label for="absolutePrefix" i18n:translate="label_absolute_prefix">Absolute path prefix</label>
                    <div class="formHelp" i18n:translate="help_absolute_prefix">
                        If your theme uses relative paths for images, stylesheets
                        or other resources, you can enter a prefix here to make
                        sure these resources will work regardless of which page
                        Plone is rendering.
                    </div>

                    <div tal:content="error" tal:condition="error" />

                    <input
                        name="absolutePrefix"
                        id="absolutePrefix"
                        type="text"
                        size="50"
                        tal:attributes="value absolutePrefix"
                        />

                </div>

                <div
                    tal:define="error errors/doctype | nothing;
                                doctype python:request.get('doctype', view.settings.doctype)"
                    tal:attributes="class python:'field error' if error else 'field'">

                    <label for="doctype" i18n:translate="label_doctype">Doctype</label>
                    <div class="formHelp" i18n:translate="help_doctype">
                        You can specify a Doctype string which will be set on
                        the output, for example "<!DOCTYPE html>". If left
                        blank the default XHTML 1.0 transistional Doctype or
                        that set in the Diazo theme is used.
                    </div>

                    <div tal:content="error" tal:condition="error" />

                    <input
                        name="doctype"
                        id="doctype"
                        type="text"
                        size="50"
                        tal:attributes="value doctype"
                        />

                </div>

                <div
                    class="field"
                    tal:define="selected python:request.get('readNetwork', view.settings.readNetwork)">

                    <input type="hidden" value="" name="readNetwork:boolean:default" />
                    <input type="checkbox" value="1" name="readNetwork:boolean" id="readNetwork"
                        tal:attributes="checked python:'readNetwork' if selected else None"
                        />
                    <label for="readNetwork" i18n:translate="label_read_network">Read network</label>
                    <div class="formHelp" i18n:translate="help_read_network">
                        Allow rules and themes to be read from remote servers.
                    </div>

                </div>

                <div
                    tal:define="error errors/hostnameBlacklist | nothing;
                                hostnameBlacklist view/settings/hostnameBlacklist | python:[];
                                hostnameBlacklist python:request.get('hostnameBlacklist', hostnameBlacklist)"
                    tal:attributes="class python:'field error' if error else 'field'">

                    <label for="hostnameBlacklist" i18n:translate="label_hostname_blacklist">Unthemed host names</label>
                    <div class="formHelp" i18n:translate="help_hostname_blacklist">
                        If there are hostnames that you do not want to be
                        themed, you can list them here, one per line. This is
                        useful during theme development, so that you can
                        compare the themed and unthemed sites. In some cases,
                        you may also want to provided an unthemed host alias
                        for content administrators to be able to use 'plain'
                        Plone.
                    </div>

                    <div tal:content="error" tal:condition="error" />

                    <textarea
                        name="hostnameBlacklist:lines"
                        id="hostnameBlacklist"
                        rows="5"
                        cols="50"
                        tal:content="python:'\n'.join(hostnameBlacklist)"
                        ></textarea>

                </div>

                <div
                    tal:define="error errors/parameterExpressions | nothing;
                                parameterExpressions python:view.settings.parameterExpressions or {};
                                parameterExpressions python:['%s = %s' % (k,v) for k,v in parameterExpressions.items()];
                                parameterExpressions python:request.get('parameterExpressions', parameterExpressions)"
                    tal:attributes="class python:'field error' if error else 'field'">

                    <label for="parameterExpressions" i18n:translate="label_parameter_expressions">Parameter expressions</label>
                    <div class="formHelp" i18n:translate="help_parameter_expressions">
                        You can define parameters that will be passed
                        to the compiled theme here. In your rules file, you can
                        refer to a parameter by <code>$name</code>. Parameters
                        are defined using TALES expressions, which should
                        evaluate to a string, a number, a boolean or None.
                        Available variables are <code>context</code>,
                        <code>request</code>, <code>portal</code>,
                        <code>portal_state</code>, and
                        <code>context_state</code>. Define one variable
                        per line, in the format <code>name = expression</code>.
                    </div>

                    <div tal:content="error" tal:condition="error" />

                    <textarea
                        name="parameterExpressions:lines"
                        id="parameterExpressions"
                        rows="8"
                        cols="50"
                        tal:content="python:'\n'.join(parameterExpressions)"
                        ></textarea>

                </div>


                <div class="formControls">
                    <input
                        type="submit"
                        name="form.button.AdvancedSave"
                        class="context"
                        value="Save"
                        i18n:attributes="value" />

                    <input
                        type="submit"
                        name="form.button.Cancel"
                        class="context"
                        value="Cancel"
                        i18n:attributes="value" />
                </div>

                <input tal:replace="structure context/@@authenticator/authenticator" />

            </form>

        </dd>

        <dt id="fieldsetlegend-help" i18n:translate="">User guide</dt>
        <dd id="fieldset-help" tal:content="structure view/render_userguide">

        </dd>

    </dl>

    <!-- Delete confirmation overlay -->
    <div id="overlay-delete-confirm" class="overlay overlay-ajax">
        <div class="close"><span i18n:translate="">Close</span></div>
        <div class="pb-ajax">
            <div>
                <h1 id="overlayTitleDeleteConfirm" class="documentFirstHeading" i18n:translate="theming_controlpanel_delete_confirm">
                    Are you sure you want to delete <span i18n:name="theme_name"></span>
                </h1>

                <p class="documentDescription" i18n:translate="theming_controlpanel_delete_confirm_description">
                    This operation cannot be undone. Note that filesystem themes
                    cannot be deleted from within Plone.
                </p>

                <form name="delete" method="post" tal:attributes="action request/URL">
                    <input tal:replace="structure context/@@authenticator/authenticator" />
                    <input type="hidden" name="themes:list" id="deleteConfirmTheme" value="" />
                    <div class="formControls">
                        <input
                            type="submit"
                            name="form.button.DeleteSelected"
                            class="destructive"
                            value="Delete"
                            i18n:attributes="value"
                            />
                        <input
                            type="submit"
                            class="standalone allowMultiSubmit"
                            type="submit"
                            name="form.button.Cancel"
                            value="Cancel"
                            i18n:attributes="value"
                            />
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- New/copy overlay -->
    <div id="overlay-new-theme" class="overlay overlay-ajax">
        <div class="close">
            <span i18n:translate="">Close</span>
        </div>
        <div class="pb-ajax">
            <div>
                <h1 id="overlayTitleNewTheme"  class="documentFirstHeading" i18n:translate="theming_controlpanel_new_theme">New theme</h1>
                <h1 id="overlayTitleCopyTheme" class="documentFirstHeading" i18n:translate="theming_controlpanel_copy_theme">Create copy of <span i18n:name="theme_name"></span></h1>

                <p class="documentDescription" i18n:translate="theming_controlpanel_new_theme_description">
                    Please enter the details of your new theme
                </p>

                <form name="create" method="post" tal:attributes="action request/URL" tal:define="errors view/errors">

                    <div
                        tal:define="error errors/title | nothing"
                        tal:attributes="class python:'field error' if error else 'field'">

                        <label for="title" i18n:translate="label_new_theme_title">Title</label>
                        <div class="formHelp" i18n:translate="help_new_theme_title">
                            Enter a short, descriptive title for your theme
                        </div>

                        <div tal:content="error" tal:condition="error" />

                        <input
                            type="text"
                            name="title"
                            id="title"
                            tal:attributes="value request/title | nothing"
                            />
                    </div>

                    <div class="field">
                        <label for="description" i18n:translate="label_new_theme_description">Description</label>
                        <div class="formHelp" i18n:translate="help_new_theme_description">
                            You may also provide a longer description for your theme.
                        </div>
                        <textarea
                            name="description"
                            id="description"
                            tal:content="request/description | nothing"></textarea>
                    </div>

                    <input type="hidden" name="baseOn" id="baseOn" tal:attributes="value request/baseOn | string:template" />

                    <div
                        class="field"
                        tal:define="selected python:request.get('enableImmediately', False)">
                        <input type="hidden" value="" name="enableImmediately:boolean:default" />
                        <input type="checkbox" value="1" name="enableImmediately:boolean" id="enableImmediately"
                            tal:attributes="checked python:'enableImmediately' if selected else None"
                            />
                        <label for="enableImmediately" i18n:translate="label_enable_immediately">Immediately enable new theme</label>
                        <div class="formHelp" i18n:translate="help_enable_immediately">
                            Select this option to enable the newly created theme
                            immediately.
                        </div>
                    </div>

                    <div class="formControls">
                        <input
                            type="submit"
                            name="form.button.CreateTheme"
                            class="standalone"
                            value="Create"
                            i18n:attributes="value"
                            />
                        <input
                            type="submit"
                            name="form.button.Cancel"
                            class="standalone allowMultiSubmit"
                            value="Cancel"
                            i18n:attributes="value"
                            />
                    </div>

                    <input tal:replace="structure context/@@authenticator/authenticator" />

                </form>

            </div>
        </div>
    </div>

    <!-- Upload overlay -->
    <div id="overlay-upload" class="overlay overlay-ajax">
        <div class="close">
            <span i18n:translate="">Close</span>
        </div>
        <div class="pb-ajax">
            <div>
                <h1 class="documentFirstHeading" i18n:translate="theming_controlpanel_upload">Upload theme</h1>

                <p class="documentDescription" i18n:translate="description_import">
                   You can import a Zip file containing an existing theme.
                   This should contain a single top level directory, which will be used as
                   the theme identifier. If no Diazo <code>rules.xml</code> or
                   <code>manifest.cfg</code> file is found in this directory, a
                   default <code>rules.xml</code> file will be created.
                </p>

                <form
                    name="import"
                    method="post"
                    enctype="multipart/form-data"
                    class="enableUnloadProtection"
                    tal:attributes="action request/URL"
                    tal:define="errors view/errors">

                    <div
                        class="field"
                        tal:define="error errors/themeArchive | nothing"
                        tal:attributes="class python:'field error' if error else 'field'">

                        <div class="formHelp" i18n:translate="help_theme_archive">
                            Select a file to upload.
                        </div>

                        <div tal:content="error" tal:condition="error" />

                        <input
                            type="file"
                            name="themeArchive"
                            id="themeArchive"
                            />

                    </div>

                    <div
                        class="field"
                        tal:define="selected python:request.get('enableNewTheme', False)">
                        <input type="hidden" value="" name="enableNewTheme:boolean:default" />
                        <input type="checkbox" value="1" name="enableNewTheme:boolean" id="enableNewTheme"
                            tal:attributes="checked python:'enableNewTheme' if selected else None"
                            />
                        <label for="enableNewTheme" i18n:translate="label_enable_new_theme">Immediately enable new theme</label>
                        <div class="formHelp" i18n:translate="help_enable_new_theme">
                            Select this option to enable the newly uploaded theme
                            immediately.
                        </div>
                    </div>

                    <div
                        class="field"
                        tal:define="selected python:request.get('replaceExisting', False)">
                        <input type="hidden" value="" name="replaceExisting:boolean:default" />
                        <input type="checkbox" value="" name="replaceExisting:boolean" id="replaceExisting"
                            tal:attributes="checked python:'replaceExisting' if selected else None"
                            />
                        <label for="replaceExisting" i18n:translate="label_replace_existing">Replace existing theme</label>
                        <div class="formHelp" i18n:translate="help_replace_existing">
                            Select this option to replace any existing theme that
                            may have been uploaded previously.
                        </div>
                    </div>

                    <div class="formControls">
                        <input
                            type="submit"
                            name="form.button.Import"
                            class="context"
                            value="Import"
                            i18n:attributes="value" />

                        <input
                            type="submit"
                            name="form.button.Cancel"
                            class="context allowMultiSubmit"
                            value="Cancel"
                            i18n:attributes="value" />
                    </div>

                    <input tal:replace="structure context/@@authenticator/authenticator" />

                </form>

            </div>
        </div>
    </div>

</div>

</body>
</html>
